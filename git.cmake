find_package(Git)

if(GIT_FOUND)
	execute_process(
		COMMAND ${GIT_EXECUTABLE} describe --dirty --tags
		WORKING_DIRECTORY ${SOURCE_DIR}
		OUTPUT_VARIABLE GIT_COM_ID
		RESULT_VARIABLE res_var
	)
	if(NOT ${res_var} EQUAL 0)
		set(GIT_COMMIT_ID "git commit id unknown")
		message(WARNING "Git failed (not a repo, or no tags). Build will not contain git revision info.")
	endif()
	string(REPLACE "\n" "" GIT_COMMIT_ID ${GIT_COM_ID})
else()
	set(GIT_COMMIT_ID "unknown (git not found!)")
	message(WARNING "Git not found. Build will not contain git revision info.")
endif()

set(vstring "/* gitversion.h - Generated by cmake. Changes will be lost! */\n"
	     "#ifndef __BLAHGD_VERSION_H\n"
	     "#define __BLAHGD_VERSION_H\n"
	     "#define VERSION \"${GIT_COMMIT_ID}\"\n"
	     "#endif\n")

file(WRITE gitversion.h.txt ${vstring})
# copy the file to the final header only if the version changes
# reduces needless rebuilds
execute_process(COMMAND ${CMAKE_COMMAND} -E copy_if_different
                        gitversion.h.txt ${BINARY_DIR}/gitversion.h)
execute_process(COMMAND ${CMAKE_COMMAND} -E remove gitversion.h.txt)
